module Test.Golden.Array.Actual where

import Language.PS.CST

import Data.Maybe (Maybe(..))
import Data.Array.NonEmpty as NonEmpty
import Prelude

declValue name expr = DeclValue
  { comments: Nothing
  , valueBindingFields:
    { name: Ident name
    , binders: []
    , guarded: Unconditional
        { expr
        , whereBindings: []
        }
    }
  }

actualModule :: Module
actualModule = Module
  { moduleName: mkModuleName $ NonEmpty.singleton "Array"
  , imports: []
  , exports: []
  , declarations:
    [
    ]
  }
